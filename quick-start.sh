#!/bin/bash

# üöÄ Constructure - –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
# –í–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–∞–º–∏
print_step() {
    echo -e "${BLUE}üîπ $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

print_header() {
    echo -e "${PURPLE}"
    echo "=========================================="
    echo "üèóÔ∏è  CONSTRUCTURE - –ë–´–°–¢–†–´–ô –ó–ê–ü–£–°–ö"
    echo "=========================================="
    echo -e "${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! command -v docker &> /dev/null; then
        print_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker: https://docs.docker.com/get-docker/"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
    if ! command -v docker-compose &> /dev/null; then
        print_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose: https://docs.docker.com/compose/install/"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
    if ! docker info &> /dev/null; then
        print_error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker daemon."
        exit 1
    fi
    
    print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_existing() {
    print_step "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose down --remove-orphans 2>/dev/null || true
    print_success "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
start_application() {
    print_step "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p logs/postgres logs/redis logs/nginx logs/api
    
    # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker-compose up -d
    
    print_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
wait_for_services() {
    print_step "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ñ–¥–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    print_info "–û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL..."
    timeout=60
    while ! docker-compose exec -T postgres pg_isready -U constructure -d constructure_dev &>/dev/null && [ $timeout -gt 0 ]; do
        sleep 2
        timeout=$((timeout-2))
        echo -n "."
    done
    echo
    
    if [ $timeout -le 0 ]; then
        print_error "Timeout: PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤"
        exit 1
    fi
    
    # –ñ–¥–µ–º Redis
    print_info "–û–∂–∏–¥–∞–Ω–∏–µ Redis..."
    timeout=30
    while ! docker-compose exec -T redis redis-cli ping &>/dev/null && [ $timeout -gt 0 ]; do
        sleep 1
        timeout=$((timeout-1))
        echo -n "."
    done
    echo
    
    if [ $timeout -le 0 ]; then
        print_error "Timeout: Redis –Ω–µ –≥–æ—Ç–æ–≤"
        exit 1
    fi
    
    # –ñ–¥–µ–º API
    print_info "–û–∂–∏–¥–∞–Ω–∏–µ API..."
    timeout=90
    while ! curl -s http://localhost:3001/health &>/dev/null && [ $timeout -gt 0 ]; do
        sleep 2
        timeout=$((timeout-2))
        echo -n "."
    done
    echo
    
    if [ $timeout -le 0 ]; then
        print_error "Timeout: API –Ω–µ –≥–æ—Ç–æ–≤"
        exit 1
    fi
    
    # –ñ–¥–µ–º Frontend
    print_info "–û–∂–∏–¥–∞–Ω–∏–µ Frontend..."
    timeout=120
    while ! curl -s http://localhost:3000 &>/dev/null && [ $timeout -gt 0 ]; do
        sleep 3
        timeout=$((timeout-3))
        echo -n "."
    done
    echo
    
    if [ $timeout -le 0 ]; then
        print_warning "Frontend –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
    fi
    
    print_success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≥–æ—Ç–æ–≤—ã!"
}

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
apply_migrations() {
    print_step "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    docker-compose exec -T api npx prisma db push 2>/dev/null || true
    docker-compose exec -T api npx prisma generate 2>/dev/null || true
    print_success "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
show_services_info() {
    print_success "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!"
    echo
    echo -e "${WHITE}üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
    echo -e "${CYAN}üåê Frontend:${NC}          http://localhost:3000"
    echo -e "${CYAN}üîß Backend API:${NC}       http://localhost:3001"
    echo -e "${CYAN}üìä Nginx (main):${NC}     http://localhost:8000"
    echo -e "${CYAN}üóÑÔ∏è  Adminer (–ë–î):${NC}     http://localhost:8080"
    echo -e "${CYAN}üêò PostgreSQL:${NC}       localhost:5433"
    echo -e "${CYAN}üì¶ Redis:${NC}            localhost:6379"
    echo
    echo -e "${WHITE}üîë –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:${NC}"
    echo -e "${YELLOW}üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:${NC}    admin@constructure.com / admin123456"
    echo -e "${YELLOW}üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:${NC}    teacher@example.com / teacher123"
    echo -e "${YELLOW}üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç:${NC}          student@example.com / student123"
    echo -e "${YELLOW}üß™ –¢–µ—Å—Ç–æ–≤—ã–π:${NC}         test@example.com / password123"
    echo
    echo -e "${WHITE}üí° –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ç–µ—Å—Ç–æ–≤—ã–º –∞–∫–∫–∞—É–Ω—Ç–∞–º:${NC}"
    echo -e "${CYAN}   http://localhost:3000/test-accounts${NC}"
    echo
    echo -e "${WHITE}üõ†Ô∏è  –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo -e "${CYAN}   docker-compose ps${NC}              # –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo -e "${CYAN}   docker-compose logs -f${NC}         # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    echo -e "${CYAN}   docker-compose down${NC}            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
    echo -e "${CYAN}   docker-compose restart${NC}         # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    echo
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header
    
    check_dependencies
    stop_existing
    start_application
    wait_for_services
    apply_migrations
    show_services_info
    
    print_success "–ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é."
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap 'print_warning "–ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; exit 1' INT TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 