# Используем Node.js 18 Alpine
FROM node:18-alpine

# Устанавливаем рабочую директорию
WORKDIR /app

# Устанавливаем системные зависимости
RUN apk add --no-cache \
    tini \
    dumb-init \
    curl \
    bash

# Создаем пользователя node с правильными правами
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Копируем package files для установки зависимостей
COPY --chown=nextjs:nodejs package*.json ./
COPY --chown=nextjs:nodejs apps/web/package*.json ./apps/web/
COPY --chown=nextjs:nodejs packages/types/package*.json ./packages/types/

# Устанавливаем все зависимости для development
RUN npm ci

# Копируем исходный код
COPY --chown=nextjs:nodejs apps/web ./apps/web
COPY --chown=nextjs:nodejs packages/types ./packages/types

# Устанавливаем все зависимости в веб директории
WORKDIR /app/apps/web
RUN npm ci

# Создаем директории с правильными правами
RUN mkdir -p /app/logs && chown -R nextjs:nodejs /app/logs && \
    mkdir -p /app/apps/web/.next && chown -R nextjs:nodejs /app/apps/web/.next

# Переключаемся на пользователя nextjs
USER nextjs

# Устанавливаем рабочую директорию
WORKDIR /app/apps/web

# Экспонируем порт
EXPOSE 3000

# Используем tini как init процесс
ENTRYPOINT ["/sbin/tini", "--"]

# Запускаем приложение
CMD ["npm", "run", "dev"] 