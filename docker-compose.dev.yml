version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: constructure-postgres-dev
    environment:
      POSTGRES_DB: constructure_dev
      POSTGRES_USER: constructure
      POSTGRES_PASSWORD: constructure_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - constructure-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U constructure -d constructure_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: constructure-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - constructure-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Backend
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.dev
    container_name: constructure-api-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://constructure:constructure_password@postgres:5432/constructure_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/api/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - constructure-network
    command: npm run dev
    restart: unless-stopped

  # Frontend Web App
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile.dev
    container_name: constructure-web-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_WS_URL: ws://localhost:3001
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/web/node_modules
    depends_on:
      - api
    networks:
      - constructure-network
    command: npm run dev
    restart: unless-stopped

  # Documentation
  docs:
    build:
      context: .
      dockerfile: ./apps/docs/Dockerfile.dev
    container_name: constructure-docs-dev
    environment:
      NODE_ENV: development
    ports:
      - "3002:3002"
    volumes:
      - ./apps/docs:/app/apps/docs
      - ./docs:/app/docs
      - /app/node_modules
      - /app/apps/docs/node_modules
    networks:
      - constructure-network
    command: npm run dev
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  constructure-network:
    driver: bridge 